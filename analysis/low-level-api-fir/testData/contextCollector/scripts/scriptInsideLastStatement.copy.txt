Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirScriptDeclarationsScope
            Classifiers:
                FirRegularClassSymbol public final class ScriptClass : R|kotlin/Any|
            Functions
                FirNamedFunctionSymbol public final fun foo(i: R|kotlin/Int|, action: R|(kotlin/Int) -> kotlin/Unit|): R|kotlin/Unit|
                FirNamedFunctionSymbol public final fun scriptFunction(): R|kotlin/Int|
                FirNamedFunctionSymbol public final fun unusedScriptFunction(p: R|kotlin/String|): R|kotlin/Int|
            Properties:
                FirPropertySymbol public final val $$result: R|kotlin/Unit|
                    public get(): R|kotlin/Unit|
    Element 7
        Scope: FirLocalScope
            Classifiers:
                FirRegularClassSymbol public final class ScriptClass : R|kotlin/Any|
            Functions
                FirNamedFunctionSymbol public final fun foo(i: R|kotlin/Int|, action: R|(kotlin/Int) -> kotlin/Unit|): R|kotlin/Unit|
                FirNamedFunctionSymbol public final fun scriptFunction(): R|kotlin/Int|
                FirNamedFunctionSymbol public final fun unusedScriptFunction(p: R|kotlin/String|): R|kotlin/Int|
            Properties:
                FirPropertySymbol lval args: R|kotlin/Array<kotlin/String>|
    Element 8
        Context receivers:
            FirScriptSymbol context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
            SCRIPT: <script-scriptInsideLastStatement.kts>
                lval args: R|kotlin/Array<kotlin/String>|

                public final class ScriptClass : R|kotlin/Any|
                public final fun scriptFunction(): R|kotlin/Int|
                public final fun unusedScriptFunction(p: R|kotlin/String|): R|kotlin/Int|
                init
                public final fun foo(i: R|kotlin/Int|, action: R|(kotlin/Int) -> kotlin/Unit|): R|kotlin/Unit|
                public final val $$result: R|kotlin/Unit|
                    public get(): R|kotlin/Unit|
                Type: kotlin.script.templates.standard.ScriptTemplateWithArgs
                Label: <script>
    Element 9
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol it: R|kotlin/Int|
    Element 10
        Scope: FirLocalScope

FILE: [ResolvedTo(IMPORTS)] scriptInsideLastStatement.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-scriptInsideLastStatement.kts>
        [ResolvedTo(BODY_RESOLVE)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class ScriptClass : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] constructor(): R|ScriptClass| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] val memberProperty: R|kotlin/Int| = Int(4)
                public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int|

        }

        public final [ResolvedTo(BODY_RESOLVE)] fun scriptFunction(): R|kotlin/Int| {
            ^scriptFunction Int(42)
        }

        public final [ResolvedTo(BODY_RESOLVE)] fun unusedScriptFunction([ResolvedTo(BODY_RESOLVE)] p: R|kotlin/String|): R|kotlin/Int| {
            ^unusedScriptFunction Int(22)
        }

        [ResolvedTo(BODY_RESOLVE)] init {
            R|/scriptFunction|()
        }

        public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] i: R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] action: R|(kotlin/Int) -> kotlin/Unit|): R|kotlin/Unit| {
            R|<local>/action|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(R|<local>/i|)
        }

        public final [ResolvedTo(BODY_RESOLVE)] val $$result: R|kotlin/Unit| = R|/foo|(R|/scriptFunction|(), <L> = [ResolvedTo(BODY_RESOLVE)] foo@fun <anonymous>([ResolvedTo(BODY_RESOLVE)] it: R|kotlin/Int|): R|kotlin/Unit| <inline=NoInline>  {
            R|/scriptFunction|()
        }
        )
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Unit|